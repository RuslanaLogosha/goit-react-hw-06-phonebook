{"version":3,"sources":["components/Filter/filter.module.css","redux/actions.js","redux/selectors.js","components/ContactForm/contactForm.js","components/ContactList/contactList.js","components/Filter/filter.js","components/App.js","redux/reducers.js","redux/store.js","index.js","components/ContactForm/form.module.css","components/ContactList/contactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","changeFilter","contactsActions","deleteContact","getContacts","state","contacts","items","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","text","includes","getFiteredContacts","ContactForm","useState","setName","setNumber","contactNameId","contactNumberId","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","reset","className","s","form","onSubmit","preventDefault","find","contact","alert","label","htmlFor","input","type","onChange","button","ContactList","list","map","listItem","listItemText","onClick","onDeleteContact","Filter","filterLabel","filterInput","target","App","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5c7bfcd3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"filter_filterLabel__1hYoT\",\"filterInput\":\"filter_filterInput__KcP-x\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst changeFilter = createAction('contacts/changeFilter');\nconst deleteContact = createAction('contacts/delete');\n\nconst contactsActions = { addContact, deleteContact, changeFilter };\nexport default contactsActions;\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  const getFiteredContacts = contacts => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(text =>\n      text.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return getFiteredContacts(contacts);\n};\n","import { useState } from 'react';\nimport shortid from 'shortid';\nimport s from './form.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from '../../redux/actions';\nimport { getContacts } from '../../redux/selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contactNameId = shortid.generate();\n  const contactNumberId = shortid.generate();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (name === '') {\n      alert(`Введите, пожалуйста, имя контакта.`);\n      return;\n    }\n\n    if (number === '') {\n      alert(`Введите, пожалуйста, номер телефона контакта.`);\n      return;\n    }\n\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(contactsActions.addContact(name, number));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={contactNameId}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          id={contactNameId}\n        />\n      </label>\n      <label className={s.label} htmlFor={contactNumberId}>\n        Number\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          id={contactNumberId}\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './contactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from '../../redux/actions';\nimport { getVisibleContacts } from '../../redux/selectors';\n\nexport default function ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(contactsActions.deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.listItem} key={id}>\n          <span className={s.listItemText}>{name}:</span>\n          <span className={s.listItemText}>{number}</span>\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func,\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/selectors';\nimport contactsActions from '../../redux/actions';\n\nimport PropTypes from 'prop-types';\nimport s from './filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={s.filterLabel}>\n      Find contacts by name\n      <input\n        className={s.filterInput}\n        type=\"text\"\n        value={value}\n        onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import ContactForm from './ContactForm/contactForm';\nimport ContactList from './ContactList/contactList';\nimport Filter from './Filter/filter';\n\nexport default function App() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport contactsReducer from './reducers';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst phonebookPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(phonebookPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__20PdV\",\"label\":\"form_label__1bLMQ\",\"input\":\"form_input__egnIr\",\"button\":\"form_button__rbi6y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__30VP1\",\"listItem\":\"contactList_listItem__3TdBf\",\"listItemText\":\"contactList_listItemText__3wcxP\",\"button\":\"contactList_button__18MOL\"};"],"sourceRoot":""}